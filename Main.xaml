<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_str_BusinessProcessName="RecruitmentDashboard" this:Main.in_str_BusinessDepartmentName="HR" this:Main.in_str_NetworkGeneralFolderName=".General" this:Main.in_str_OrchestratorGeneralFolderName=".General" this:Main.in_boo_Invoked="False" this:Main.in_boo_SingleOrchestratorFolder="False" this:Main.in_str_RootFolderName="Root" this:Main.in_boo_SaveScreenshotsInStorageBucket="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:r="clr-namespace:RPA_Template;assembly=RPA_Template" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_str_BusinessProcessName" Type="InArgument(x:String)" />
    <x:Property Name="in_str_BusinessDepartmentName" Type="InArgument(x:String)" />
    <x:Property Name="out_list_JobSystemExceptions" Type="OutArgument(scg:List(s:Exception))" />
    <x:Property Name="out_list_JobBusinessExceptions" Type="OutArgument(scg:List(ui:BusinessRuleException))" />
    <x:Property Name="in_arr_str_InvolvedApps" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="If you put a path here, it will be used instead of the general asset" Name="in_str_CustomMainRPA_FolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_str_NetworkGeneralFolderName" Type="InArgument(x:String)" />
    <x:Property Name="in_str_OrchestratorGeneralFolderName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="When calling this process from another one, you have to set this argument to true" Name="in_boo_Invoked" Type="InArgument(x:Boolean)" />
    <x:Property Name="out_str_JobEndedReason" Type="OutArgument(x:String)" />
    <x:Property Name="in_boo_SingleOrchestratorFolder" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_str_RootFolderName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="For Example: new ValueTuple(Of String, String)() {ValueTuple.Create(&quot;00:00&quot;,&quot;08:00&quot;),ValueTuple.Create(&quot;22:00&quot;,&quot;23:59&quot;)}" Name="in_arr_arr_str_ProjectDownTimes_Weekday" Type="InArgument(s:ValueTuple(x:String, x:String)[])" />
    <x:Property sap2010:Annotation.AnnotationText="For Example: new ValueTuple(Of String, String)() {ValueTuple.Create(&quot;00:00&quot;,&quot;08:00&quot;),ValueTuple.Create(&quot;22:00&quot;,&quot;23:59&quot;)}" Name="in_arr_arr_str_ProjectDownTimes_Friday" Type="InArgument(s:ValueTuple(x:String, x:String)[])" />
    <x:Property sap2010:Annotation.AnnotationText="For Example: new ValueTuple(Of String, String)() {ValueTuple.Create(&quot;00:00&quot;,&quot;08:00&quot;),ValueTuple.Create(&quot;22:00&quot;,&quot;23:59&quot;)}" Name="in_arr_arr_str_ProjectDownTimes_Saturday" Type="InArgument(s:ValueTuple(x:String, x:String)[])" />
    <x:Property sap2010:Annotation.AnnotationText="For Example: new ValueTuple(Of String, String, string)() {ValueTuple.Create(&quot;19/06/2024&quot;,&quot;00:00&quot;,&quot;08:00&quot;),ValueTuple.Create(&quot;19/06/2024&quot;,&quot;22:00&quot;,&quot;23:59&quot;)}" Name="in_arr_arr_str_ProjectDownTimes_Specific" Type="InArgument(s:ValueTuple(x:String, x:String, x:String)[])" />
    <x:Property sap2010:Annotation.AnnotationText="In case you use a different name than the main one" Name="in_str_CustomBusinessDepartmentGeneralFolderName" Type="InArgument(x:String)" />
    <x:Property Name="in_boo_SaveScreenshotsInStorageBucket" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:Main.in_str_CustomMainRPA_FolderPath>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.in_str_CustomMainRPA_FolderPath>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1202,702</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="126">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Text</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>RPA_Template</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Data.Common</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="124">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>RPA_Template</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.Unsafe</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID2}" DisplayName="Main" sap:VirtualizedContainerService.HintSize="776,637" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">20,2.6666666666667</av:Point>
        <x:Double x:Key="StateContainerWidth">742</x:Double>
        <x:Double x:Key="StateContainerHeight">600</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">80,47.7866666666667 336,47.7866666666667 336,56.8</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Common actions in the beginning of every job + custom actions" DisplayName="State_BeginningActions" sap:VirtualizedContainerService.HintSize="219,121" sap2010:WorkflowViewState.IdRef="State_1">
      <State.Entry>
        <Sequence sap:VirtualizedContainerService.HintSize="550,3532" sap2010:WorkflowViewState.IdRef="Sequence_79">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="488,81" sap2010:WorkflowViewState.IdRef="Assign_146">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(s:Exception)">[out_list_JobSystemExceptions]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(s:Exception)">[New List(Of system.Exception)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="488,81" sap2010:WorkflowViewState.IdRef="Assign_147">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(ui:BusinessRuleException)">[out_list_JobBusinessExceptions]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(ui:BusinessRuleException)">[New List(Of BusinessRuleException)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[not in_boo_Invoked]" DisplayName="If not invoked" sap:VirtualizedContainerService.HintSize="488,360" sap2010:WorkflowViewState.IdRef="If_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,178" sap2010:WorkflowViewState.IdRef="Sequence_71">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                  <ui:AddLogFields.Fields>
                    <InArgument x:TypeArguments="x:String" x:Key="BusinessDepartment">[in_str_BusinessDepartmentName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="BusinessProcess">[in_str_BusinessProcessName]</InArgument>
                  </ui:AddLogFields.Fields>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:AddLogFields>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_72" />
            </If.Else>
          </If>
          <ui:MultipleAssign DisplayName="Multiple Assign init global vars" sap:VirtualizedContainerService.HintSize="488,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[GlobalVariables.str_BusinessDepartmentName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_str_BusinessDepartmentName]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[GlobalVariables.str_BusinessProcessName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_str_BusinessProcessName]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Boolean">[boo_SaveScreenshotsInStorageBucket]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Boolean">[in_boo_SaveScreenshotsInStorageBucket]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <TryCatch DisplayName="Try_BeginningActions" sap:VirtualizedContainerService.HintSize="488,2469" sap2010:WorkflowViewState.IdRef="TryCatch_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="450,2241" sap2010:WorkflowViewState.IdRef="Sequence_81">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <r:BeginningActions sap:VirtualizedContainerService.HintSize="388,2130" sap2010:WorkflowViewState.IdRef="BeginningActions_2" in_arr_arr_str_ProjectDownTimes_Friday="[in_arr_arr_str_ProjectDownTimes_Friday]" in_arr_arr_str_ProjectDownTimes_Saturday="[in_arr_arr_str_ProjectDownTimes_Saturday]" in_arr_arr_str_ProjectDownTimes_Specific="[in_arr_arr_str_ProjectDownTimes_Specific]" in_arr_arr_str_ProjectDownTimes_Weekday="[in_arr_arr_str_ProjectDownTimes_Weekday]" in_arr_str_InvolvedApps="[in_arr_str_InvolvedApps]" in_boo_SaveScreenshotsInStorageBucket="[boo_SaveScreenshotsInStorageBucket]" in_boo_SingleOrchestratorFolder="[in_boo_SingleOrchestratorFolder]" in_str_BusinessDepartmentName="[in_str_BusinessDepartmentName]" in_str_BusinessProcessName="[in_str_BusinessProcessName]" in_str_CustomBusinessDepartmentGeneralFolderName="[in_str_CustomBusinessDepartmentGeneralFolderName]" in_str_NetworkGeneralFolderName="[in_str_NetworkGeneralFolderName]" in_str_OrchestratorGeneralFolderName="[in_str_OrchestratorGeneralFolderName]" in_str_ProjectJsonFilePath="[Path.GetFullPath(&quot;Project.json&quot;)]" in_str_RootFolderName="[in_str_RootFolderName]" out_JobjectProjectJSON="[Jobject_ProjectJSON]" out_Jobject_JobDetails="[Jobject_JobDetails]" out_RuntimeType="[GlobalVariables.RuntimeType]" out_boo_API_OAUTH="[boo_API_OAUTH]" out_dic_str_obj_BusinessDepartmentAssets="[GlobalVariables.dic_str_obj_BusinessDepartmentAssets]" out_dic_str_obj_BusinessProcessAssets="[GlobalVariables.dic_str_obj_BusinessProcessAssets]" out_dic_str_obj_GeneralAssets="[GlobalVariables.dic_str_obj_GeneralAssets]" out_dt_BusinessAppsDownTimes="[dt_BusinessAppsDownTimes]" out_dt_ProcessDownTimes="[dt_ProcessDownTimes]" out_secstr_API_PasswordOrExternalAppSecret="[secstr_API_PasswordOrExternalAppSecret]" out_secstr_SMTP_Password="[secstr_SMTP_Password]" out_str_API_UsernameOrExternalAppId="[str_API_UsernameOrExternalAppId]" out_str_BusinessDepartmentFolderPath="[str_BusinessDepartmentFolderPath]" out_str_BusinessProcessFolderPath="[str_BusinessProcessFolderPath]" out_str_EnvironmentFolderPath="[str_EnvironmentFolderPath]" out_str_EnvironmentGeneralFolderPath="[str_EnvironmentGeneralFolderPath]" out_str_EnvironmentName="[str_EnvironmentName]" out_str_JobGUID="[GlobalVariables.str_JobGUID]" out_str_MainRPA_FolderPath="[str_MainRPA_FolderPath]" out_str_OrchestratorBusinessDepartmentFolderPath="[str_OrchestratorBusinessDepartmentFolderPath]" out_str_OrchestratorBusinessDepartmentGeneralFolderPath="[str_OrchestratorBusinessDepartmentGeneralFolderPath]" out_str_OrchestratorBusinessProcessFolderPath="[str_OrchestratorBusinessProcessFolderPath]" out_str_OrchestratorGeneralFolderPath="[str_OrchestratorGeneralFolderPath]" out_str_OrchestratorURL="[str_OrchestratorURL]" out_str_SMTP_Username="[str_SMTP_Username]" out_str_ScreenshotsFolderPath="[str_ScreenshotsFolderPath]" out_str_TenantName="[str_TenantName]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </r:BeginningActions>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Catch_BeginningActions" sap:VirtualizedContainerService.HintSize="496,408.8" sap2010:WorkflowViewState.IdRef="Sequence_82">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <r:ExceptionGenericActions in_str_ScreenshotComment="{x:Null}" sap:VirtualizedContainerService.HintSize="433.6,506.4" sap2010:WorkflowViewState.IdRef="ExceptionGenericActions_4" in_ProjectJSON="[Jobject_ProjectJSON]" in_boo_SaveScreenshotsInStorageBucket="[boo_SaveScreenshotsInStorageBucket]" in_exception="[exception]" in_needScreenshot="False" in_screenshotsFolderPath="[str_ScreenshotsFolderPath]" in_str_OrchestratorFolderPath="[str_OrchestratorBusinessProcessFolderPath]" out_takenScreenshotFullPath="[str_takenScreenshotFullPath]" out_takenScreenshotNameOnly="[str_takenScreenshotNameOnly]" />
                    <AddToCollection x:TypeArguments="s:Exception" Collection="[out_list_jobSystemExceptions]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="433.6,24.8" sap2010:WorkflowViewState.IdRef="AddToCollection`1_25" Item="[exception]" />
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_151">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[GlobalVariables.str_JobEndedReason]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">ErrorInBeginningActions</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <If Condition="[String.IsNullOrEmpty(str_JobEndedReason)]" DisplayName="If no JobEndedReason-CheckDownTime" sap:VirtualizedContainerService.HintSize="488,52" sap2010:WorkflowViewState.IdRef="If_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="630.4,1278.4" sap2010:WorkflowViewState.IdRef="Sequence_77">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <r:CheckForDownTime sap:VirtualizedContainerService.HintSize="587.2,350.4" sap2010:WorkflowViewState.IdRef="CheckForDownTime_1" in_arr_str_InvolvedApps="[in_arr_str_InvolvedApps]" in_dt_BusinessAppsDownTimes="[dt_BusinessAppsDownTimes]" in_dt_ProcessDowntimes="[dt_ProcessDownTimes]" out_boo_IsBusinessAppsDownTime="[boo_IsNowBusinessAppsDownTime]" out_boo_IsProcessDownTime="[boo_IsNowProcessDownTime]" out_timespan_NextOK_Time="[timespan_NextOK_Time]" />
                <If Condition="[boo_IsNowProcessDownTime]" DisplayName="If ProcessDownTime" sap:VirtualizedContainerService.HintSize="587.2,798.4" sap2010:WorkflowViewState.IdRef="If_9">
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_73">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_149">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_JobEndedReason]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["ProcessDownTime"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="553.6,444" sap2010:WorkflowViewState.IdRef="Sequence_76">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[boo_IsNowBusinessAppsDownTime]" DisplayName="If BusinessAppsProcessDownTime" sap:VirtualizedContainerService.HintSize="510.4,354.4" sap2010:WorkflowViewState.IdRef="If_10">
                        <If.Then>
                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_74">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_150">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[str_JobEndedReason]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["BusinessAppsDownTime"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,102.4" sap2010:WorkflowViewState.IdRef="Sequence_75">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,102.4" sap2010:WorkflowViewState.IdRef="Sequence_78">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">226.4,56.8</av:Point>
          <av:Size x:Key="ShapeSize">219,121</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">185.2571428571432</x:Double>
          <x:Double x:Key="StateContainerHeight">27.010343061956263</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Exception" sap:VirtualizedContainerService.HintSize="640.8,510.4" sap2010:WorkflowViewState.IdRef="Transition_35">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">226.4,87.8 73.52,87.8 73.52,309.333333333333</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">17</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">10</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[out_list_jobSystemExceptions.Count&gt;0]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID0" DisplayName="State_End Process" sap:VirtualizedContainerService.HintSize="448,658" sap2010:WorkflowViewState.IdRef="State_4" IsFinal="True">
              <State.Entry>
                <If Condition="[out_list_JobBusinessExceptions.Count=1 AndAlso out_list_JobSystemExceptions.Count=0]" DisplayName="If there is only one single business exception" sap:VirtualizedContainerService.HintSize="402,544" sap2010:WorkflowViewState.IdRef="If_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Throw DisplayName="Throw the only one business exception" Exception="[New BusinessRuleException(&quot;Exception.s:&quot;+Environment.NewLine+&quot;Business:&quot;+Environment.NewLine+&quot;#1: &quot;+out_list_JobBusinessExceptions(0).Message+Environment.NewLine+&quot;Data: &quot;+Newtonsoft.Json.JsonConvert.SerializeObject(out_list_JobBusinessExceptions(0).Data))]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
                  </If.Then>
                  <If.Else>
                    <If Condition="[out_list_JobBusinessExceptions.Count&gt;0 OrElse out_list_JobSystemExceptions.Count&gt;0]" DisplayName="if there are exceptions" sap:VirtualizedContainerService.HintSize="368,272" sap2010:WorkflowViewState.IdRef="If_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Throw DisplayName="Throw the exceptions" Exception="[New System.Exception(&quot;Exception.s:&quot;+Environment.NewLine+(IF(out_list_JobBusinessExceptions.Count&gt;0,&quot;Business:&quot;+Environment.NewLine+String.Join(Environment.NewLine,out_list_JobBusinessExceptions.Select(function(x, index) &quot;#&quot;+(index+1).ToString+&quot;: &quot;+x.Message+Environment.NewLine+&quot;Data: &quot;+Newtonsoft.Json.JsonConvert.SerializeObject(x.Data))),&quot;&quot;)+IF(out_list_JobSystemExceptions.Count&gt;0,Environment.NewLine+&quot;System:&quot;+Environment.NewLine+String.Join(Environment.NewLine,out_list_JobSystemExceptions.Select(function(x, index) &quot;#&quot;+(index+1).ToString+&quot;: &quot;+x.Message+Environment.NewLine+&quot;Data: &quot;+Newtonsoft.Json.JsonConvert.SerializeObject(x.Data))),&quot;&quot;)).Trim)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_84" />
                      </If.Else>
                    </If>
                  </If.Else>
                </If>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">53,309.333333333333</av:Point>
                  <av:Size x:Key="ShapeSize">137,131</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">103.20000000000005</x:Double>
                  <x:Double x:Key="StateContainerHeight">94.39999999999986</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="Process/BusinessApps DownTime" sap:VirtualizedContainerService.HintSize="952,512.8" sap2010:WorkflowViewState.IdRef="Transition_39">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">226.4,111.25 94.10000000000001,111.25 94.10000000000001,309.333333333333</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">33</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">22</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID0</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProcessDownTimes\Seq_ProcessDownTimeInTheBeginning.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="ProcessDownTimes\Seq_ProcessDownTimeInTheBeginning.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_timespan_NextOK_Time">[timespan_NextOK_Time]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Transition.Action>
          <Transition.Condition>
            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="(str_JobEndedReason.Equals(&quot;ProcessDownTime&quot;) OrElse str_JobEndedReason.Equals(&quot;BusinessAppsDownTime&quot;)) AndAlso out_list_jobSystemExceptions.Count=0" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="MoveOn" sap2010:WorkflowViewState.IdRef="Transition_44">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">445.4,111.25 610.6,111.25 610.6,309.333333333333</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">32</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">30</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[out_list_jobSystemExceptions.Count=0 AndAlso Not boo_IsNowBusinessAppsDownTime AndAlso Not boo_IsNowProcessDownTime]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID1" DisplayName="State_CutomActions" sap:VirtualizedContainerService.HintSize="219,92" sap2010:WorkflowViewState.IdRef="State_13">
              <State.Entry>
                <TryCatch DisplayName="Try_Performer" sap:VirtualizedContainerService.HintSize="438,363" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                  <TryCatch.Variables>
                    <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New Dictionary(Of String, Object)]" Name="dic_str_obj_AllJobData" />
                  </TryCatch.Variables>
                  <TryCatch.Try>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Performer workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="CustomActions.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Catch(system)_Performer" sap:VirtualizedContainerService.HintSize="450,682" sap2010:WorkflowViewState.IdRef="Sequence_56">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <r:ExceptionGenericActions sap:VirtualizedContainerService.HintSize="388,498" sap2010:WorkflowViewState.IdRef="ExceptionGenericActions_2" in_ProjectJSON="[Jobject_ProjectJSON]" in_boo_SaveScreenshotsInStorageBucket="[boo_SaveScreenshotsInStorageBucket]" in_exception="[exception]" in_needScreenshot="True" in_screenshotsFolderPath="[str_ScreenshotsFolderPath]" in_str_OrchestratorFolderPath="[str_OrchestratorBusinessProcessFolderPath]" out_takenScreenshotFullPath="[str_takenScreenshotFullPath]" out_takenScreenshotNameOnly="[str_takenScreenshotNameOnly]">
                            <r:ExceptionGenericActions.in_str_ScreenshotComment>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </r:ExceptionGenericActions.in_str_ScreenshotComment>
                          </r:ExceptionGenericActions>
                          <AddToCollection x:TypeArguments="s:Exception" Collection="[out_list_JobSystemExceptions]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="387.2,24.8" sap2010:WorkflowViewState.IdRef="AddToCollection`1_19" Item="[exception]" />
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Catch(Business)_Performer" sap:VirtualizedContainerService.HintSize="450,287" sap2010:WorkflowViewState.IdRef="Sequence_63">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <r:ExceptionGenericActions sap:VirtualizedContainerService.HintSize="388,498" sap2010:WorkflowViewState.IdRef="ExceptionGenericActions_3" in_ProjectJSON="[Jobject_ProjectJSON]" in_boo_SaveScreenshotsInStorageBucket="[boo_SaveScreenshotsInStorageBucket]" in_exception="[exception]" in_needScreenshot="True" in_screenshotsFolderPath="[str_ScreenshotsFolderPath]" in_str_OrchestratorFolderPath="[str_OrchestratorBusinessProcessFolderPath]" out_takenScreenshotFullPath="[str_takenScreenshotFullPath]" out_takenScreenshotNameOnly="[str_takenScreenshotNameOnly]">
                            <r:ExceptionGenericActions.in_str_ScreenshotComment>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </r:ExceptionGenericActions.in_str_ScreenshotComment>
                          </r:ExceptionGenericActions>
                          <AddToCollection x:TypeArguments="s:Exception" Collection="[out_list_JobSystemExceptions]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="387.2,24.8" sap2010:WorkflowViewState.IdRef="AddToCollection`1_23" Item="[exception]" />
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">523,309.333333333333</av:Point>
                  <av:Size x:Key="ShapeSize">219,92</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">184.8</x:Double>
                  <x:Double x:Key="StateContainerHeight">55.280000000000086</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="MoveOn" sap2010:WorkflowViewState.IdRef="Transition_45">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">523,369.133333333333 493,369.133333333333 493,381.493333333333 189.8,381.493333333333</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">49</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:String" Name="str_takenScreenshotFullPath" />
      <Variable x:TypeArguments="x:String" Name="str_takenScreenshotNameOnly" />
      <Variable x:TypeArguments="x:Boolean" Name="boo_IsNowProcessDownTime" />
      <Variable x:TypeArguments="x:Boolean" Name="boo_IsNowBusinessAppsDownTime" />
      <Variable x:TypeArguments="x:TimeSpan" Name="timespan_NextOK_Time" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>